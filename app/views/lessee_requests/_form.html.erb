<!DOCTYPE html>
<style>
  .form
  {
    width:400px;
    float: left;
  }
  #map
  {
    float: left;
  }

</style>

<%= form_with(model: lessee_request, local: true) do |form| %>
  <% if lessee_request.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(lessee_request.errors.count, "error") %> prohibited this lessee_request from being saved:</h2>

      <ul>
        <% lessee_request.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>


<div class = "form">

  <table class="table table-striped">
  <tbody>

  <tr>
    <td><input id="address" type="textbox" value="Waltham, MA"></td>
    <td><input id="submit" type="button" value="Search Address"></td>
  </tr>

  <tr>
    <td><%= form.label :latitude %></td>
    <td><%= form.text_field :latitude, :required => true, :readonly => true %></td>
  </tr>

  <tr>
    <td><%= form.label :longitude %></td>
    <td><%= form.text_field :longitude, :required => true, :readonly => true %></td>
  </tr>

  <tr>
    <td><%= form.label :country %></td>
    <td><%= form.text_field :country, :required => true, :readonly => true %></td>
  </tr>

  <tr>
    <td><%= form.label :state %></td>
    <td><%= form.text_field :state, :required => true, :readonly => true %></td>
  </tr>

  <tr>
    <td><%= form.label :city %></td>
    <td><%= form.text_field :city, :required => true, :readonly => true %></td>
  </tr>

  <tr>
    <td><%= form.label :radius %></td>
    <td><%= form.text_field :radius, :required => true %></td>
  </tr>

  <tr>
    <td><%= form.label :earliest_movein_date %></td>
    <td><%= form.text_field :earliest_movein_date, data: { behavior: "flatpickr"}, :required => true %><td>
  </tr>

  <tr>
    <td><%= form.label :earliest_movein_date %></td>
    <td><%= form.date_select :earliest_movein_date, :required => true %><td>
  </tr>

  <tr>
    <td><%= form.label :latest_movein_date %></td>
    <td><%= form.date_select :latest_movein_date, :required => true %></td>
  </tr>

  <tr>
    <td><%= form.label :min_duration %></td>
    <td><%= form.number_field :min_duration , :required => true%></td>
  </tr>

  <tr>
    <td><%= form.label :max_duration %></td>
    <td><%= form.number_field :max_duration , :required => true%></td>
  </tr>

  <tr>
    <td><%= form.label :max_rent %></td>
    <td><%= form.text_field :max_rent , :required => true%></td>
  </tr>

  <tr>
    <td><%= form.label :max_n_roommates %></td>
    <td><%= form.number_field :max_n_roommates , :required => true%></td>
  </tr>

  <tr>
    <td><%= form.label :max_n_housemates %></td>
    <td><%= form.number_field :max_n_housemates , :required => true%></td>
  </tr>

  <tr>
    <td><%= form.label :private_bath %></td>
    <td><%= form.check_box :private_bath %></td>
  </tr>

  <tr>
    <td><%= form.label :balcony %></td>
    <td><%= form.check_box :balcony %></td>
  </tr>

  <tr>
    <td><%= form.label :smoke%></td>
    <td><%= form.check_box :smoke %></td>
  </tr>

  <tr>
    <td><%= form.label :roommate_gender %></td>
    <td><%= form.select :roommate_gender,  LesseeRequest::GENDER_TYPES %></td>
  </tr>  
  
  </tbody>
  </table>
</div>





<p>
    <div id="map"></div>
    <script>
      function initMap() {
        
		var lat = document.getElementById('lessee_request_latitude').value;
		var lng = document.getElementById('lessee_request_longitude').value;
		var city = document.getElementById('lessee_request_city').value;
		var state = document.getElementById('lessee_request_state').value;
		var country = document.getElementById('lessee_request_country').value;

        var input = document.getElementById('address');

        var autocomplete = new google.maps.places.Autocomplete(input);

        // Set the data fields to return when the user selects a place.
        autocomplete.setFields(
            ['address_components', 'geometry', 'icon', 'name']);
		
		

		if (!lat || !lng){
		    lat=42.3765;
		    lng=-71.2356;
		    city="Waltham";
			state="Massachusetts"
			country="United States"
		    document.getElementById('lessee_request_latitude').value = lat;
		    document.getElementById('lessee_request_longitude').value = lng;
			var city = document.getElementById('lessee_request_city').value = city;
			var state = document.getElementById('lessee_request_state').value = state;
			var country = document.getElementById('lessee_request_country').value = country;
    	}
		
		var myCoords = new google.maps.LatLng(lat,lng);    
		var mapOptions = {
			center: myCoords,
			zoom: 14
		};    
		var map = new google.maps.Map(document.getElementById('map'), mapOptions);    
		var marker = new google.maps.Marker({
			position: myCoords,
		    animation: google.maps.Animation.DROP,
		    map: map,
		    draggable: true
		});
		function refreshMarker(){
		    var lat = document.getElementById('lessee_request_latitude').value;
		    var lng = document.getElementById('lessee_request_longitude').value;
		    var myCoords = new google.maps.LatLng(lat, lng);
		    marker.setPosition(myCoords);
		    map.setCenter(marker.getPosition());   
		}
		// when input values change call refreshMarker
		document.getElementById('lessee_request_latitude').onchange = refreshMarker;
		document.getElementById('lessee_request_longitude').onchange = refreshMarker;

		// when marker is dragged update input values
		marker.addListener('drag', function() {
		    latlng = marker.getPosition();
		    newlat=(Math.round(latlng.lat()*1000000))/1000000;
		    newlng=(Math.round(latlng.lng()*1000000))/1000000;
		    document.getElementById('lessee_request_latitude').value = newlat;
		    document.getElementById('lessee_request_longitude').value = newlng;
		});
		
        var geocoder = new google.maps.Geocoder;
        var infowindow = new google.maps.InfoWindow;

        var geocoder_search = new google.maps.Geocoder();

        document.getElementById('submit').addEventListener('click', function() {
		if (infowindow) {
			infowindow.close();
		}
          geocodeAddress(geocoder_search, map, marker);
        });

		function geocodeAddress(geocoder, resultsMap, marker) {
			var address = document.getElementById('address').value;
		    geocoder.geocode({'address': address}, function(results, status) {
		        if (status === 'OK') {
				    resultsMap.setCenter(results[0].geometry.location);
					marker.setPosition(results[0].geometry.location);
					document.getElementById('lessee_request_latitude').value = results[0].geometry.location.lat();
					document.getElementById('lessee_request_longitude').value = results[0].geometry.location.lng();
					var i;
					var flag = 0;
					for(i = 0; i < results[0].address_components.length; i++){
						if(results[0].address_components[i].types[0] == "locality"){
					  		document.getElementById('lessee_request_city').value = results[0].address_components[i].long_name
							flag += 1;
						}
						if(results[0].address_components[i].types[0] == "country"){
					  		document.getElementById('lessee_request_country').value = results[0].address_components[i].long_name
							flag += 1;
						}
						if(results[0].address_components[i].types[0] == "administrative_area_level_1"){
					  		document.getElementById('lessee_request_state').value = results[0].address_components[i].long_name
							flag += 1;
						}
					}
					if(flag < 3){
						alert("City/State/Country not found, please relocate!")
					}
		      } else {
		        alert('Geocode was not successful for the following reason: ' + status);
		      }
		    });
		  }


		  function geocodeLatLng(geocoder, map, infowindow, marker) {
		      var latlng = {lat: marker.getPosition().lat(), lng: marker.getPosition().lng()};
		      geocoder.geocode({'location': latlng}, function(results, status) {
		      if (status === 'OK') {
		        if (results[0]) {
		          infowindow.setContent(results[0].formatted_address);
				  var i;
				  var flag = 0;
				  for(i = 0; i < results[0].address_components.length; i++){
					if(results[0].address_components[i].types[0] == "locality"){
				  		document.getElementById('lessee_request_city').value = results[0].address_components[i].long_name
						flag += 1;
					}
					if(results[0].address_components[i].types[0] == "country"){
				  		document.getElementById('lessee_request_country').value = results[0].address_components[i].long_name
						flag += 1;
					}
					if(results[0].address_components[i].types[0] == "administrative_area_level_1"){
				  		document.getElementById('lessee_request_state').value = results[0].address_components[i].long_name
						flag += 1;
					}
				  }
				  if(flag < 3){
					alert("City/State/Country not found, please relocate!")
				  }
		          infowindow.open(map, marker);
		        } else {
		          window.alert('No results found');
		        }
		      } else {
		        window.alert('Geocoder failed due to: ' + status);
		      }
		    });
		  }

		// When drag ends, center (pan) the map on the marker position
		marker.addListener('dragend', function() {
		    map.panTo(marker.getPosition());  
			//geocodeLatLng(geocoder, map, infowindow, marker); 
		});
		marker.addListener('dragend', function() {
		    //map.panTo(marker.getPosition());  
			if (infowindow) {
				infowindow.close();
			}
			geocodeLatLng(geocoder, map, infowindow, marker);
		});
		marker.addListener('click', function() {
		    //map.panTo(marker.getPosition());  
			if (infowindow) {
				infowindow.close();
			}
			geocodeLatLng(geocoder, map, infowindow, marker);
		});
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7ClwnGU9QTuNhY3DuVqM5K5YbWA7zJsI&libraries=places&callback=initMap"
    async defer></script>
</p>

  <div class="actions">
    <%= form.submit "Submit Your LesseeRequest", class: "btn btn-primary"  %>
  </div>
<% end %>
